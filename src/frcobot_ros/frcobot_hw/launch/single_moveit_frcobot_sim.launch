<launch>

    <!-- 指定规划管道 -->
    <arg name="pipeline" default="ompl" />

    <!-- 默认情况下，不启动数据库（因为它可能很大） -->
    <arg name="db" default="false" />
    <!-- 允许用户指定数据库位置 -->
    <arg name="db_path" default="$(find fr5v6_moveit_config)/default_warehouse_mongo_db" />

    <!-- 默认情况下，不处于调试模式 -->
    <arg name="debug" default="false" />

    <!-- 默认情况下，使用rviz -->
    <arg name="use_rviz" default="true" />
    <arg name="use_gui" default="false" />


    <!-- 加载 URDF、SRDF 和其他 .yaml 配置文件到参数服务器 -->
    <include file="$(find fr5v6_moveit_config)/launch/planning_context.launch">
        <arg name="load_robot_description" value="true" />
    </include>

    <!-- We do not have a robot connected, so publish fake joint states -->
    <!-- <node name="joint_state_publisher" pkg="joint_state_publisher"
    type="joint_state_publisher">
            <param name="use_gui" value="$(arg use_gui)" />
            <rosparam param="source_list">[/frrobot/joint_states]</rosparam>
        </node> -->

    <!-- 运行主要的 MoveIt! 可执行文件，不执行轨迹（默认情况下没有配置控制器） -->
    <include file="$(find fr5v6_moveit_config)/launch/move_group.launch">
        <arg name="allow_trajectory_execution" value="true" />
        <arg name="fake_execution" value="false" />
        <arg name="info" value="true" />
        <arg name="debug" value="$(arg debug)" />
        <arg name="pipeline" value="$(arg pipeline)" />
    </include>

    <!-- 运行 Rviz 并加载默认配置，以查看 move_group 节点的状态 -->
    <include file="$(find fr5v6_moveit_config)/launch/moveit_rviz.launch" if="$(arg use_rviz)">
        <arg name="rviz_config" value="$(find fr5v6_moveit_config)/launch/moveit.rviz" />
        <arg name="debug" value="$(arg debug)" />
    </include>

    <!-- 如果启用了数据库加载，也启动 mongodb -->
    <include file="$(find fr5v6_moveit_config)/launch/default_warehouse_db.launch"
        if="$(arg db)">
        <arg name="moveit_warehouse_database_path" value="$(arg db_path)" />
    </include>

    <!-- 启动 frrobot 控制 -->
    <include file="$(find frcobot_hw)/launch/single_frcobot_sim.launch">
        launch-prefix="xterm -e"
    </include>

</launch>